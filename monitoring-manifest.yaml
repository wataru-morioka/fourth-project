apiVersion: v1
kind: PersistentVolume
metadata:
  name: prometheus-pv-volume
  labels:
    type: prometheus
spec:    
  storageClassName: manual
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  persistentVolumeReclaimPolicy: Recycle
  hostPath:
    path: "/Users/moriokawataru/Kubernetes/PersistentVolume/prometheus"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pv-claim
  #labels:
  #  kubernetes.io/cluster-service: "true"
spec:
  selector:
    matchLabels:
      type: prometheus
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-nodeport
spec:
  type: NodePort
  selector:
    app: prometheus
  ports:
  - name: prometheus
    port: 9090
    targetPort: 9090
    nodePort: 32200
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      name: prometheus
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.9.2
        args:
        - '--config.file=/mnt/etc/prometheus.yml'
        ports:
        - containerPort: 9090
        volumeMounts:
        - name: prometheus-conf
          mountPath: /mnt/etc/
        - name: data-volume
          mountPath: /mnt/data/
        - name: prometheus-persistent-storage
          mountPath: /var/run/secrets
      volumes:
      - name: prometheus-conf
        configMap:
          name: prometheus-conf
      - name: data-volume
        emptyDir: {}
      - name: prometheus-persistent-storage 
        persistentVolumeClaim:
          claimName: prometheus-pv-claim
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-conf
data:
  prometheus.yml: |
    global:
      scrape_interval:     60s
      evaluation_interval: 60s
    scrape_configs:
    - job_name: 'prometheus'
      tls_config:
        ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
      bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
      metrics_path: /metrics
      scheme: http
      static_configs:
      - targets:
        - localhost:9090
---
apiVersion: v1
kind: Service
metadata:
  name: grafana-nodeport
spec:
  type: NodePort
  selector:
    app: grafana
  ports:
  - name: grafana
    port: 3000
    targetPort: 3000
    nodePort: 32300
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      name: grafana
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:6.1.6
        ports:
        - containerPort: 3000